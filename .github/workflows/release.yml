name: "Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version number
        required: true
        type: string
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: cache poetry install
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-2.0.1-0
      - uses: snok/install-poetry@v1
        with:
          version: 2.0.1
          virtualenvs-create: true
          virtualenvs-in-project: true
      - run: poetry version ${{ github.event.inputs.version }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
            commit_message: Bump version
      - name: release
        uses: softprops/action-gh-release@v2
        with:
            tag_name: ${{ github.event.inputs.version }}
            generate_release_notes: true
            make_latest: true

  release-docker:
    runs-on: ${{ matrix.config.os }}
    needs: release
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-24.04, arch: amd64 }
          - { os: ubuntu-24.04-arm, arch: arm64 }
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      - name: Build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            jitsi/skynet:${{ github.event.inputs.version }}-cpu-${{ matrix.config.arch }}
          build-args: |
            BASE_IMAGE_BUILD=ubuntu:22.04
            BASE_IMAGE_RUN=ubuntu:22.04
            BUILD_WITH_VLLM=0

  release-docker-manifest:
    runs-on: ubuntu-latest
    needs: release-docker
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create Docker Manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            jitsi/skynet:${{ github.event.inputs.version }}-cpu
            jitsi/skynet:latest-cpu
          sources: |
            jitsi/skynet:${{ github.event.inputs.version }}-cpu-amd64
            jitsi/skynet:${{ github.event.inputs.version }}-cpu-arm64
